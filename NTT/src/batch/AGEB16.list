*>Copyright (c) 2016-2021 NTT DATA, Inc. All rights reserved.
*>compiler version:  6.0.28692
*>source file name:  AGEB16.cbl
*>date generated  :  Mon Oct 03 09:52:00 CDT 2022
*>compiler options:  -cv -apost -dcmi -cscs=preserve -dz -ld -sp=/apps/test/mdoff/copy:/apps/prod/cid1p/copy -dv=32 -od=/apps/test/mdoff/exe/bat -cirp1 -cmcd -csqq -pt2 -cax -sl2 -rw=FILE-ID
*>source encoding :  UTF-8
*>target encoding :  ISO-8859-1
IDENTIFICATION DIVISION.                                         
PROGRAM-ID.  AGEB16.                                             
AUTHOR.       J. CONDON.                                         
                                                                 
*>REMARKS.                                                         
*>    THIS SUB-PROGRAM IS CALLED BY BATCH IDEAL PROGRAMS TO SET    
*>    UP PARAMETERS NEEDED BY, AND ISSUE CALL TO, THE IBM BAR CODE 
*>    ROUTINE (EANSRC).  PARAMETERS PASSED TO THIS PROGRAM ARE     
                                                                 
ENVIRONMENT DIVISION.                                            
*>                                                                 
*>    This special-names section is necessary and I'd use the set  
*>    statement at the top of this file also.                      
*>                                                                 
SPECIAL-NAMES.                                                   
*>     CALL-CONVENTION 0 IS callC.                                 
DATA DIVISION.                                                   
WORKING-STORAGE SECTION.                                         
*>copy "ctypes.cpy".                                               
*>vvv-> file: /apps/prod/cid1p/copy/ctypes.cpy
*>The below lines are commented out.                               
*> 77  char                   pic s9(2)  comp-5 is typedef.        
*> 77  uns-char               pic  9(2)  comp-5 is typedef.        
*> 77  short                  pic s9(4)  comp-5 is typedef.        
*> 77  uns-short              pic  9(4)  comp-5 is typedef.        
*> 77  int                    pic s9(9)  comp-5 is typedef.        
*> 77  uns-int                pic  9(9)  comp-5 is typedef.        
*>$IF P64 set                                                      
*> 77  long                   pic s9(18) comp-5 is typedef.        
*> 77  uns-long               pic  9(18) comp-5 is typedef.        
*>$ELSE                                                            
*> 77  long                   pic s9(9)  comp-5 is typedef.        
*> 77  uns-long               pic  9(9)  comp-5 is typedef.        
*>$END                                                             
*> 77  l-long                 pic s9(18) comp-5 is typedef.        
*> 77  uns-l-long             pic  9(18) comp-5 is typedef.        
*> 77  d-l-float                         comp-2 is typedef.        
*> 77  d-float                           comp-2 is typedef.        
*> 77  float                             comp-1 is typedef.        
*> 77  proc-pointer           procedure-pointer is typedef.        
*> 77  data-pointer                     pointer is typedef.        
*> 77  void                   pic  9(2)  comp-5 is typedef.        
*>NTT DATA modification of variables starts.                       
*>The below lines are added by NTT DATA to remove the typedef      
*>definitions, modify the compiler directives IF-ELSE-END as per   
*> NTT DATA format, and rename reserved word float to float-1.     
77  char                   pic s9(2)  comp-5.                    
77  uns-char               pic  9(2)  comp-5.                    
77  short                  pic s9(4)  comp-5.                    
77  uns-short              pic  9(4)  comp-5.                    
77  int                    pic s9(9)  comp-5.                    
77  uns-int                pic  9(9)  comp-5.                    
*>- >>IF P64 IS DEFINED                                               
*>- 77  long                   pic s9(18) comp-5.                    
*>- 77  uns-long               pic  9(18) comp-5.                    
*>- >>ELSE                                                            
77  long                   pic s9(9)  comp-5.                    
77  uns-long               pic  9(9)  comp-5.                    
*>- >>END-IF                                                          
77  l-long                 pic s9(18) comp-5.                    
77  uns-l-long             pic  9(18) comp-5.                    
77  d-l-float                         comp-2.                    
77  d-float                           comp-2.                    
77  float-1                           comp-1.                    
77  proc-pointer           procedure-pointer.                    
77  data-pointer                     pointer.                    
77  void                   pic  9(2)  comp-5.                    
*>NTT Data modification of variables ends.                         
78  default-convention-val value   0.                            
78  cdecl-convention-val   value   0.                            
78  pascal-convention-val  value  11.                            
78  fast-convention-val    value   2.                            
78  std-convention-val     value  74.                            
78  sys-convention-val     value  16.                            
78  opt-convention-val     value   0.                            
78  pasc16-convention-val  value  35.                            
78  cdec16-convention-val  value  32.                            
*>^^^-> file: /apps/prod/cid1p/copy/ctypes.cpy
01  ws-disp-comp   pic 9(7) value zeros.                         
                                                                 
*> 01  preloadobj   procedure-pointer.                             
*> 01  preloaderr   procedure-pointer.                             
01  PARM-FLDS.                                                   
    05  PARM-BC-TYPE                PIC X(1).                    
*>                                                                 
*>        Note that this has been increased from 28 to 50          
*>                                                                 
    05  PARM-BC-IN                  PIC X(50).                   
    05  PARM-BC-OUT                 PIC X(128).                  
*>     05  PARM-TEST                   PIC S9(5) COMP-5 VALUE ZERO.
01  parm-bc-len       pic s9(4) comp-5.                          
01  parm-bc-rc        pic s9(4) comp-5.                          
                                                                 
LINKAGE SECTION.                                                 
01  PARM-LIST.                                                   
   05  BC-LENGTH              PIC s9(4) comp.                    
   05  BC-CODE-IN                   PIC X(28).                   
   05  BC-CODE-OUT                  PIC X(128).                  
                                                                 
                                                                 
PROCEDURE DIVISION USING PARM-LIST.                              
                                                                 
*> set preloadobj to entry "barcode".                              
*> set preloaderr to entry "doesnotexit".                          
*> if preloadobj equal preloaderr                                  
*>   display "unable to load barcode"                              
*>   stop run                                                      
*> end-if.                                                         
     display ' bc code in ' bc-code-in                           
     MOVE 'C' TO PARM-BC-TYPE.                                   
      MOVE BC-CODE-IN TO PARM-BC-IN.                             
*>     MOVE '0011600000000000277700001' TO PARM-BC-IN.             
     move bc-length to ws-disp-comp                              
     display ' disp comp len ' ws-disp-comp                      
     display ' bc len ' bc-length                                
      MOVE BC-LENGTH TO PARM-BC-LEN.                             
     MOVE +28 TO PARM-BC-LEN.                                    
     display ' parm bc len 28 ' parm-bc-len                      
*>      MOVE 27 to PARM-TEST.                                      
     MOVE 'OUT' TO PARM-BC-OUT.                                  
     DISPLAY 'Calling eansrc '.                                  
*>      SET FUNCPTR TO ENTRY 'bcsubr'.                             
     CALL "eansrc" USING                                         
         BY REFERENCE PARM-BC-TYPE,                              
         BY REFERENCE PARM-BC-IN,                                
         BY REFERENCE PARM-BC-LEN,                               
         BY REFERENCE PARM-BC-OUT,                               
         RETURNING PARM-BC-RC.                                   
                                                                 
     MOVE PARM-BC-LEN TO BC-LENGTH.                              
     MOVE PARM-BC-OUT TO BC-CODE-OUT.                            
     DISPLAY 'RC was: ' PARM-BC-RC.                              
     DISPLAY 'Got ' PARM-BC-LEN ' bytes back'.                   
     DISPLAY 'Out: "' PARM-BC-OUT '"'.                           
     GOBACK.                                                     
*> ------------------------------------------------------------------------------------------------------------------
*> The source line number references in the following sections are either of
*> the form <line-number> or <file-number>:<line-number>. The first form is
*> used as an abbreviation for 0:<line-number>.
*> The following is a key allowing the determination of the file name from
*> the <file-number>.
*>  
*>          0: AGEB16.cbl
*>          1: /apps/prod/cid1p/copy/ctypes.cpy
*>  
*> ------------------------------------------------------------------------------------------------------------------
*> DATA MAP KEY
*>               Sec(Section) Fil = File Section                Type Flags: column O    ---> O = Occurs Item
*>                            Wor = Working-Storage Section                 column R    ---> R = Redefines
*>                            Loc = Local-Storage Section                   column X/G  ---> X = External
*>                            Rep = Report Section                                           G = Global
*>                            Lin = Linkage Section                         
*> ------------------------------------------------------------------------------------------------------------------
*> Data map for Program-Id: AGEB16
*> ------------------------------------------------------------------------------------------------------------------
*>     Line    Name                                                  Size Offset      Sec Flags Data Type
*>                                                                                        O R X
*>                                                                                            G
*> ------------------------------------------------------------------------------------------------------------------
*>     1:27 77 CHAR                                                     2             Wor       Native Binary
*>     1:28 77 UNS-CHAR                                                 2             Wor       Native Binary
*>     1:29 77 SHORT                                                    2             Wor       Native Binary
*>     1:30 77 UNS-SHORT                                                2             Wor       Native Binary
*>     1:31 77 INT                                                      4             Wor       Native Binary
*>     1:32 77 UNS-INT                                                  4             Wor       Native Binary
*>     1:37 77 LONG                                                     4             Wor       Native Binary
*>     1:38 77 UNS-LONG                                                 4             Wor       Native Binary
*>     1:40 77 L-LONG                                                   8             Wor       Native Binary
*>     1:41 77 UNS-L-LONG                                               8             Wor       Native Binary
*>     1:42 77 D-L-FLOAT                                                8             Wor       Comp-2
*>     1:43 77 D-FLOAT                                                  8             Wor       Comp-2
*>     1:44 77 FLOAT-1                                                  4             Wor       Comp-1
*>     1:45 77 PROC-POINTER                                             4             Wor       Procedure Pointer
*>     1:46 77 DATA-POINTER                                             4             Wor       Pointer
*>     1:47 77 VOID                                                     2             Wor       Native Binary
*>     1:49   78 DEFAULT-CONVENTION-VAL                                                         
*>     1:50   78 CDECL-CONVENTION-VAL                                                           
*>     1:51   78 PASCAL-CONVENTION-VAL                                                          
*>     1:52   78 FAST-CONVENTION-VAL                                                            
*>     1:53   78 STD-CONVENTION-VAL                                                             
*>     1:54   78 SYS-CONVENTION-VAL                                                             
*>     1:55   78 OPT-CONVENTION-VAL                                                             
*>     1:56   78 PASC16-CONVENTION-VAL                                                          
*>     1:57   78 CDEC16-CONVENTION-VAL                                                          
*>       20 01 WS-DISP-COMP                                             7             Wor       Display Numeric
*>       24 01 PARM-FLDS                                              179             Wor       Group
*>       25   05 PARM-BC-TYPE                                           1 (000000000)           Display
*>       29   05 PARM-BC-IN                                            50 (000000001)           Display
*>       30   05 PARM-BC-OUT                                          128 (000000051)           Display
*>       32 01 PARM-BC-LEN                                              2             Wor       Native Binary
*>       33 01 PARM-BC-RC                                               2             Wor       Native Binary
*>       36 01 PARM-LIST                                              158             Lin       Group
*>       37   05 BC-LENGTH                                              2 (000000000)           Binary
*>       38   05 BC-CODE-IN                                            28 (000000002)           Display
*>       39   05 BC-CODE-OUT                                          128 (000000030)           Display
*> ------------------------------------------------------------------------------------------------------------------
*> --I: #14 Compiling AGEB16.cbl
